### Challenge ONE - Portfolio


# Memorial descritivo HTML e CSS


## Anotações do processo de desenvolvimento do projeto 


### Desenvolvimento mobile first

- Criar por etapas a estrutura HTML e estilo CSS conforme layout proposto (Figma)

- Criar os estilos com base no conceito "atomic design"
  - um arquivo CSS para cada componente dos elementos principais do HTML


### IDE - VS Code

  - Abrir pasta do projeto no VS Code


#### Criar arquivo "index.html"

  - sintaxe Emmet
    html:5

  - alterar idioma para "pt-BR"
  - definir título da página (tag "title")
  - buscar e vincular fontes do projeto ("Raleway" 400, 500, 600 e 700)

  - incluir meta tags (informações da página)
      - description
      - keywords
      - author
      - favicon

#### Criar configurações básicas de estilo do projeto 

  - organizar os arquivos na pasta "/assets/css/basic"

  - base.css
    - cores e fontes do root
    - margens do body
    - margens e espaçamentos dos títulos e listas
    - aparência dos links
    - responsividade (tablete / laptop / desktop)
  
  - normalize.css
    - anular configuração padrão dos navegadores

  - importar fontes no documento HTML
  - vincular os arquivos ao documento HTML (index.html)

-------------------------------------------------

#### Criar estrutura HTML do cabeçalho (header)

  header
    nav.header__container
      h2.header__logo
      ul.header__lista
        li.header__item
          a.header__link)*6

  - sintaxe Emmet com metodologia BEM
    header.header__container>nav.header__container>h2.header__logo+ul.header__lista>
    (l1.header__item>a.header__link)*6

  - estrutura criada
    <header>
      <nav class="header__container">
        <h2 class="header__logo"></h2>
        <ul class="header__lista">
          <l1 class="header__item"><a href="" class="header__link"></a></l1>
          <l1 class="header__item"><a href="" class="header__link"></a></l1>
          <l1 class="header__item"><a href="" class="header__link"></a></l1>
          <l1 class="header__item"><a href="" class="header__link"></a></l1>
          <l1 class="header__item"><a href="" class="header__link"></a></l1>
          <l1 class="header__item"><a href="" class="header__link"></a></l1>
        </ul>
      </nav>
    </header>

  - incluir nome do autor no "h2"
  - incluir "#" no caminho dos links (href="#")
  - incluir modificador na classe do último item da lista de links (--single)
  - incluir nomes das seções em cada item da lista
    Sobre mim
    Skills
    Hobbies
    Formação
    Projetos
    netopaiva@yahoo.com


#### Reproduzir estilo do cabeçalho conforme modelo Figma

  - criar arquivo "header.css" na pasta "assets/css"
  - criar arquivos CSS para cada componente do elemento "header"
    - organizados na pasta "assets/css/header"
  - importar cada componente para o arquivo "header.css"
  - vincular arquivo "header.css" no documento HTML

  - seguir modelo Figma
  - exibir icone do "logo"
  - ocultar itens da lista de links (mobile / tablete)
  - exibir apenas email (mobile / tablete)
  - configurar responsividade
    - peso da fonte (tablete / desktop)
    - exibir lista completa de links (desktop)

-------------------------------------------------

#### Criar estrutura "banner" (com tag semântica "aside")

  aside.aside__container
    img.aside__foto
    div.aside__descricao
      h1.aside__titulo
      h2.asisde__subtitulo
      ul.aside__lista
        li.aside__lista__item
          a.aside__lista__link)*4

  - sintaxe Emmet
  aside.aside__container>img.aside__foto+div.aside__descricao>h1.aside__titulo+h2.asisde__subtitulo+ul.aside__lista>(li.aside__item>a)*4

  - estrutura criada

    <aside class="aside__container">
      <img src="" alt="" class="aside__foto">
      <div class="aside__descricao">
        <h1 class="aside__titulo"></h1>
        <h2 class="asisde__subtitulo"></h2>
          <ul class="aside__lista">
            <li class="aside__lista__item"><a class="aside__lista__link" href=""></a></li>
            <li class="aside__lista__item"><a class="aside__lista__link" href=""></a></li>
            <li class="aside__lista__item"><a class="aside__lista__link" href=""></a></li>
            <li class="aside__lista__item"><a class="aside__lista__link" href=""></a></li>
          </ul>
      </div>
    </aside>

  - adicionar informações aos elementos
    - endereço e "alt" da imagem
    - texto do título e subtítulo
    - endereço das redes sociais para abrir em nova aba
    - endereço do currículo para abiri em nova aba


#### Reproduzir estilo do banner (Figma)

  - criar arquivo "aside.css" na pasta "assets/css"
  - criar arquivos CSS para cada componente do elemento "aside"
    - organizados na pasta "assets/css/aside"
  - importar cada componente para o arquivo "aside.css"
  - vincular arquivo "aside.css" no documento HTML

  - caracterísitcas dos componentes
    - foto com borda circular
    - título e subtítulo alinhados à esquerda
    - lista de links em uma linha
    - incluir imagem da seta-abre-link
    - ajustar responsividade

-------------------------------------------------

#### Criar seção "Sobre mim"

  section.sobre__container
    h2.sobre__titulo
    p.sobre__texto
    img.sobre__imagem


  - Sintaxe Emmet
  section.sobre__container>h2.sobre__titulo+p.sobre__texto+img.sobre__imagem

  - Estrutura HTML

    <section class="sobre__container">
      <h2 class="sobre__titulo"></h2>
      <p class="sobre__texto"></p>
      <img src="" alt="" class="sobre__imagem">
    </section>

  - adicionar informações aos elementos
  - texto do título e parágrafos
  - endereço e "alt" da imagem


#### Reproduzir estilo do sobre (Figma)

  - criar arquivo "sobre.css" na pasta "assets/css"
  - criar arquivos CSS para cada componente do elemento "sobre"
    - organizados na pasta "assets/css/sobre"
  - importar cada componente para o arquivo "sobre.css"
  - vincular arquivo "sobre.css" no documento HTML

  - caracterísitcas dos componentes
    - título e texto alinhados à esquerda
    - ajustar tamanho da imagem
    - ajustar espaçamentos e margens

-------------------------------------------------

#### Criar seção "Skills"

  section.skills__container
    h2.skills__titulo
    ul.skills__lista
      li.skills__item
        img.skills__icone
        h3.skills__nome)*6


- Sintaxe Emmet

  section.skills__container>h2.skills__titulo+ul.skills__lista>(li.skills__item>img.skills__icone+h3.skills__nome)*6


- Estrutura HTML

  <section class="skills__container">
    <h2 class="skills__titulo"></h2>
      <ul class="skills__lista">
        <li class="skills__item">
          <img src="" alt="" class="skills__icone">
          <h3 class="skills__nome"></h3>
        </li>
        <li class="skills__item">
          <img src="" alt="" class="skills__icone">
          <h3 class="skills__nome"></h3>
        </li>
        <li class="skills__item">
          <img src="" alt="" class="skills__icone">
          <h3 class="skills__nome"></h3>
        </li>
        <li class="skills__item">
          <img src="" alt="" class="skills__icone">
          <h3 class="skills__nome"></h3>
        </li>
        <li class="skills__item">
          <img src="" alt="" class="skills__icone">
          <h3 class="skills__nome"></h3>
        </li>
        <li class="skills__item">
          <img src="" alt="" class="skills__icone">
          <h3 class="skills__nome"></h3>
        </li>
      </ul>
    
  </section>


  - adicionar informações aos elementos
  - título da seção
  - endereço e "alt" da imagem
  - nome das ferramentas


#### Reproduzir estilo do sobre (Figma)

  - criar arquivo "sobre.css" na pasta "skills/css"
  - criar arquivos CSS para cada componente do elemento "skills"
  - organizados na pasta "assets/css/skills"
  - importar cada componente para o arquivo "skills.css"
  - vincular arquivo "skills.css" no documento HTML

  - caracterísitcas dos componentes
  - título centralizado
  - ícones e nomes alinhados à esquerda
  - ajustar tamanho da imagem
  - ajustar espaçamentos e margens

-------------------------------------------------

#### Criar seção "Hobbies"

  section.hobbies__container
    h2.hobbies__titulo
    ul.hobbies__lista
      li.hobbies__item
        img.hobbies__icone
        h3.hobbies__nome)*6


- Sintaxe Emmet

  section.hobbies__container>h2.hobbies__titulo+ul.hobbies__lista>(li.hobbies__item>img.hobbies__icone+h3.hobbies__nome)*6


- Estrutura HTML

  <section class="hobbies__container">
    <h2 class="hobbies__titulo"></h2>
    <ul class="hobbies__lista">
      <li class="hobbies__item">
        <img src="" alt="" class="hobbies__icone">
        <h3 class="hobbies__nome"></h3>
      </li>
      <li class="hobbies__item">
        <img src="" alt="" class="hobbies__icone">
        <h3 class="hobbies__nome"></h3>
      </li>
      <li class="hobbies__item">
        <img src="" alt="" class="hobbies__icone">
        <h3 class="hobbies__nome"></h3>
      </li>
      <li class="hobbies__item">
        <img src="" alt="" class="hobbies__icone">
        <h3 class="hobbies__nome"></h3>
      </li>
      <li class="hobbies__item">
        <img src="" alt="" class="hobbies__icone">
        <h3 class="hobbies__nome"></h3>
      </li>
      <li class="hobbies__item">
        <img src="" alt="" class="hobbies__icone">
        <h3 class="hobbies__nome"></h3>
      </li>
    </ul>
  </section>


  - adicionar informações aos elementos
  - título da seção
  - endereço e "alt" da imagem
  - nome das ferramentas


#### Reproduzir estilo do hobbies (Figma)

  - criar arquivo "sobre.css" na pasta "hobbies/css"
  - criar arquivos CSS para cada componente do elemento "hobbies"
  - organizados na pasta "assets/css/hobbies"
  - importar cada componente para o arquivo "hobbies.css"
  - vincular arquivo "hobbies.css" no documento HTML

  - caracterísitcas dos componentes
  - título centralizado
  - ícones e nomes alinhados à esquerda
  - ajustar tamanho da imagem
  - ajustar espaçamentos e margens

-------------------------------------------------

#### Criar seção "Formação"

  section.formacao__container
    h2.formacao__titulo
    ul.formacao__lista
      li.formacao__item
        div.formacao__logo__container
          img.formacao__logo
        h3.formacao__nome
        p.formacao__texto)*3


- Sintaxe Emmet

  section.formacao__container>h2.formacao__titulo+ul.formacao__lista>(li.formacao__item>(div.formacao__logo__container>img.formacao__logo)+h3.formacao__nome+p.formacao__texto)*3


- Estrutura HTML

  <section class="formacao__container">
    <h2 class="formacao__titulo"></h2>
    <ul class="formacao__lista">
      <li class="formacao__item">
        <div class="formacao__logo__container">
          <img src="" alt="" class="formacao__logo">
        </div>
        <h3 class="formacao__nome"></h3>
        <p class="formacao__texto"></p>
      </li>
      <li class="formacao__item">
        <div class="formacao__logo__container">
          <img src="" alt="" class="formacao__logo">
        </div>
        <h3 class="formacao__nome"></h3>
        <p class="formacao__texto"></p>
      </li>
      <li class="formacao__item">
        <div class="formacao__logo__container">
          <img src="" alt="" class="formacao__logo">
        </div>
        <h3 class="formacao__nome"></h3>
        <p class="formacao__texto"></p>
      </li>
    </ul>
  </section>


  - adicionar informações aos elementos
  - título e subtítulo parágrafos
  - endereço e "alt" da imagem


#### Reproduzir estilo do formação (Figma)

  - criar arquivo "sobre.css" na pasta "formacao/css"
  - criar arquivos CSS para cada componente do elemento "formacao"
  - organizados na pasta "assets/css/formacao"
  - importar cada componente para o arquivo "formacao.css"
  - vincular arquivo "formacao.css" no documento HTML

  - caracterísitcas dos componentes
  - título centralizado
  - logo centralizado
  - subtitulo e texto alinhados à esquerda
  - ajustar tamanho da imagem
  - ajustar espaçamentos e margens


-------------------------------------------------

#### Criar seção "Projetos"

  section.projetos__container
  h2.projetos__titulo
  ul.projetos__lista
    li.projetos__item
      img.projetos__tela
      div.projetos__textos__container
        h3.projetos__nome
        p.projetos__texto
        div.projetos__botao__container
          h4.projeto_botao.botao)*2)*3


- Sintaxe Emmet

section.projetos__container>h2.projetos__titulo+ul.projetos__lista>(li.projetos__item>img.projetos__tela+div.projetos__textos__container>h3.projetos__nome+p.projetos__texto+div.botao__container>a.botao__secundario+a.botao__primario)*3


- Estrutura HTML

<section class="projetos__container">
  <h2 class="projetos__titulo"></h2>
  <ul class="projetos__lista">
    <li class="projetos__item">
      <img src="" alt="" class="projetos__tela">
      <div class="projetos__textos__container">
        <h3 class="projetos__nome"></h3>
        <p class="projetos__texto"></p>
        <div class="botao__container">
          <a href="" class="botao__secundario"></a>
          <a href="" class="botao__primario"></a>
        </div>
      </div>
    </li>
    <li class="projetos__item">
      <img src="" alt="" class="projetos__tela">
      <div class="projetos__textos__container">
        <h3 class="projetos__nome"></h3>
        <p class="projetos__texto"></p>
        <div class="botao__container">
          <a href="" class="botao__secundario"></a>
          <a href="" class="botao__primario"></a>
        </div>
      </div>
    </li>
    <li class="projetos__item">
      <img src="" alt="" class="projetos__tela">
      <div class="projetos__textos__container">
        <h3 class="projetos__nome"></h3>
        <p class="projetos__texto"></p>
        <div class="botao__container">
          <a href="" class="botao__secundario"></a>
          <a href="" class="botao__primario"></a>
        </div>
      </div>
    </li>
  </ul>
</section>


  - adicionar informações aos elementos
  - título e subtítulo parágrafos
  - endereço e "alt" da imagem


#### Reproduzir estilo do projetos (Figma)

  - criar arquivo "sobre.css" na pasta "projetos/css"
  - criar arquivos CSS para cada componente do elemento "projetos"
  - organizados na pasta "assets/css/projetos"
  - importar cada componente para o arquivo "projetos.css"
  - vincular arquivo "projetos.css" no documento HTML

  - caracterísitcas dos componentes
  - título centralizado
  - imagem centralizada
  - subtitulo e texto alinhados à esquerda
  - botões em linha e à esquerda
  - ajustar tamanho da imagem
  - ajustar espaçamentos e margens


-------------------------------------------------

#### Criar seção "Conato"


tag <form>

  rever aulas de validação de formulário
  refazer a estrutura HTML 
    - tags
    - campos
    - classes
    - atributos e propriedades
    - data-attributes
    - validação HTMl e JS


Esquema revisto da nova estrutura HTML do Contato/formulário

  section.contato__container>
    div.contato__imagem+
    div.contato__container--interno>
      (div.contato__container--textos>
        h2.contato__titulo+
        p.contato__texto)+
      (form.formulario__container>
          (fieldset.formulario__fildset>
            (div.input__container>
              input.input__campo.input__nome+
              label.input__label+
              span.input__erro)*3+
            (div.input__container>
              textarea.input__campo.input__mensagem+
              label.input__label+
              span.input__erro))+
          button.formulario__botao.botao__primario)

Nova sintaxe Emmet

  section.contato__container>div.contato__imagem+div.contato__container--interno>(div.contato__container--textos>h2.contato__titulo+p.contato__texto)+(form.formulario__container>(fieldset.formulario__fildset>(div.input__container>input.input__campo.input__nome+label.input__label+span.input__erro)*3+(div.input__container>textarea.input__campo.input__mensagem+label.input__label+span.input__erro))+button.formulario__botao.botao__primario)

Nova estrutura criada

  <section class="contato__container">
    <div class="contato__imagem"></div>
    <div class="contato__container--interno">
      <div class="contato__container--textos">
        <h2 class="contato__titulo"></h2>
        <p class="contato__texto"></p>
      </div>
      <form action="" class="formulario__container">
        <fieldset class="formulario__fildset">
          <div class="input__container">
            <input type="text" class="input__campo input__nome">
            <label for="" class="input__label"></label>
            <span class="input__erro"></span>
          </div>
          <div class="input__container">
            <input type="text" class="input__campo input__nome">
            <label for="" class="input__label"></label>
            <span class="input__erro"></span>
          </div>
          <div class="input__container">
            <input type="text" class="input__campo input__nome">
            <label for="" class="input__label"></label>
            <span class="input__erro"></span>
          </div>
          <div class="input__container">
            <textarea name="" id="" cols="30" rows="10" class="input__campo input__mensagem"></textarea>
            <label for="" class="input__label"></label>
            <span class="input__erro"></span>
          </div>
        </fieldset>
        <button class="formulario__botao botao__primario"></button>
      </form>
    </div>
  </section>

  - adicionar informações aos elementos
  - título e parágrafos
  - campos do formulário
  - os modificadores para cada campo
  - seletor "data-attributes" em cada campo
  - botão de enviar


Estrutura HTML final com as iformações adicionadas

  <section class="contato__container" id="contato">

    <div class="contato__imagem" alt="imagem ilustrativa da área de contato, detalhe do teclado do computador"></div>

    <div class="contato__container--interno">

      <div class="contato__container--textos">
        <h2 class="contato__titulo">
          <a href="#nav" title="Clique aqui para voltar ao topo da página">Contato</a>
        </h2>
        <p class="contato__texto">Quer entrar em contato comigo? Preencha o formulário abaixo e entrarei em contato o mais rápido possível.</p>
      </div>

      <form action="" class="formulario__container">

        <fieldset class="formulario__fieldset">

          <div class="input__container"> <!-- campo nome -->

            <input class="input__campo input__nome" data-form="nome" name="nome" type="text" placeholder="Nome" title="Digite seu nome" minlength="9" required>

            <label class="input__label" data-label="nome" for="Nome">
              Nome
            </label>

            <span class="input__erro" data-span="nome">
              Favor preencher com seu nome completo.
            </span>

          </div> <!-- fecha campo nome -->

          <div class="input__container"> <!-- campo email -->

            <input class="input__campo input__email" data-form="email" name="email" type="email" placeholder="E-mail" title="Digite seu e-mail" required>

            <label class="input__label" data-label="email" for="E-mail">
              E-mail
            </label>

            <span class="input__erro" data-span="email">
              Favor preencher com seu email válido.
            </span>

          </div> <!-- fecha campo email -->

          <div class="input__container"> <!-- campo assunto -->

            <input class="input__campo input__assunto" data-form="assunto" name="assunto" type="text" minlength="10" placeholder="Assunto" title="Digite o assunto da mensagem" required>

            <label class="input__label" data-label="assunto" for="Assunto">
              Assunto
            </label>

            <span class="input__erro" data-span="assunto">
              Favor descrever qual o assunto.
            </span>

          </div> <!-- fecha campo assunto -->

          <div class="input__container"> <!-- campo mensagem -->

            <textarea class="input__campo input__mensagem" data-form="mensagem" name="mensagem" minlength="50" maxlength="300" cols="" rows="" placeholder="Mensagem" title="Digite sua mensagem, máximo de 300 caracteres." required></textarea>

            <label class="input__label" data-label="mensagem" for="Mensagem">
              Mensagem
            </label>

            <span class="input__erro" data-span="mensagem">
              Favor escrever sua mensagem com mínimo de 50 caracteres e máximo de 300.
            </span>

          </div> <!-- fecha campo mensagem -->

        </fieldset>

        <button class="formulario__botao botao__primario" data-btn="botao" title="Clique para enviar a mensagem">Enviar mensagem</button>

      </form>

    </div>

  </section>


#### Reproduzir estilo do contato (Figma)

  - criar arquivo "contato.css" na pasta "projetos/contato"
  - criar arquivos CSS para cada componente do elemento "contato"
  - organizados na pasta "assets/css/contato"
  - importar cada componente para o arquivo "contato.css"
  - vincular arquivo "contato.css" no documento HTML
  
  - criar arquivo "formulario.css" na pasta "projetos/formulario"
  - criar arquivos CSS para cada componente do elemento "formulario"
  - organizados na pasta "assets/css/formulario"
  - importar cada componente para o arquivo "formulario.css"
  - vincular arquivo "formulario.css" no documento HTML
  
  - caracterísitcas dos componentes
  - título e texto alinhados à esquerda
  - ajustar tamanho da imagem
  - ajustar espaçamentos e margens
  - exibir imagem apenas em laptop/desktop


### Validação do formulário

  - verificar condição válida do campo
  - combinação entre HTMl e JS
  - exibir/ocultar classe CSS de erro


#### Validação HTML

Todos os campos
  - required

Campo "nome"
  - input
  - name="nome"
  - type="text"
  - minlength="5"
  
  Campo "email"
  - input
  - name="email"
  - type="email"
  

Campo "assunto"
  - input
  - name="assunto"
  - type="text"
  - minlength="10"

Campo "mensagem"
  - textarea
  - name="mensagem"
  - minlength="50"
  - maxlength="300"


#### Validação JS

  Receber todos os campos do formulário
    - seletor "data-attributes"
    - armazenar em uma constante
    const cadaCampo = document.querySelectorAll('[data-form]');
  
  Detectar qual campo está em foco
    cadaCampo.forEach(campo => {
      campo.addEventListener('blur', evento => {
        validaCampo(evento.target);
      });
    });

  Validar campo

    - função para verificar conteúdo do campo
    - exibir mensagem de erro se inválido

    function validaCampo(campo){
      if(campo.validity.valid){
        campo.parentElement.classList.remove('input__container--invalido');
      } else {
        campo.parentElement.classList.add('input__container--invalido');
      }
    }

    - com opção para armazenar dados
      - nome do campo
        // let nomeCampo = (campo.name);
      - conteúdo do campo
        // let conteudo = (campo.value);


  - Exportar função "validaCampo"
  - Importar função "validaCampo" no arquivo "validar.js"
  - Vincular JS tipo módulo no documento HTML
    - src="validar.js"
    - type="module"


#### Enviar dados do formulário

  - Serviço de envio de formulário "Formsubmit"
  - inlcuir funcionalidades de envio (input hidden)
  - criar página de agradecimento pelo contato


-------------------------------------------------

#### Criar "Rodapé"

  footer.footer__container
    h3.footer__autor
    time.footer__date


- Sintaxe Emmet

  footer.footer__container>h3.footer__autor+time.footer__date


- Estrutura HTML

  <footer class="footer__container">
    <h3 class="footer__autor"></h3>
    <time class="footer__date" pubdate></time>
  </footer>


  - adicionar informações aos elementos
  - título e subtítulo parágrafos
  - endereço e "alt" da imagem


#### Reproduzir estilo do rodapé (Figma)

  - criar arquivo "sobre.css" na pasta "projetos/rodape"
  - criar arquivos CSS para cada componente do elemento "rodape"
  - organizados na pasta "assets/css/rodape"
  - importar cada componente para o arquivo "rodape.css"
  - vincular arquivo "rodape.css" no documento HTML

  - caracterísitcas dos componentes
  - título e texto alinhados à esquerda
  - ajustar tamanho da imagem
  - ajustar espaçamentos e margens

-------------------------------------------------

### Revisão

  - criar tag "main" (semântica)
  - incluir todas as seções na tag "main"
  - corrigir textos
  - estrutura HTML do formulário
  - validação do formulário (HTML/JS)
  - estilização do formulário (CSS/JS)
  - incluir "id" âncora nas "sections" e "nav"


## Publicar no GitHub

  - fazer commit do projeto
  - na página do repositŕio no GitHub
    - clicar em "settings"
    - no menu esquerdo clicar em "pages"
    - selecionar "Branch/none" para "main" e salvar
    - irá gerar o link do GitHub Pages
    https://netopaiva.github.io/challenge-portfolio/


## Revisão após publicação

  - refatoração do formulário
  - verificar funcionalidades após publicação
  - corrigir JS (export function)
  - incluir links dos projetos (repositório e página)
  - commit final
  - finalizar entrega (formulário Alura)
  - publicar entrega (linkedIn)
  - celebrar!!!




/* --- fim ;)